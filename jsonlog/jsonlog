#!/usr/bin/env python3
'''
Log to JSON
Converts log files from most freedesktop.org compliant logging daemons to JSON.

Copyright 2023 by Marcelina Ho≈Çub.
Licensed under the GNU Affero General Public License, version 3.
See <http://www.gnu.org/licenses/> for more information.

This program is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

You should have received a copy of the GNU Affero General Public License
along with this program. If not, please contact the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
'''

import asyncio
import aiofiles
import json
import re
from sys import argv

input = argv[1] 

async def log_to_json(input_file, output_file):
    json_list = []
    current_message = None

    async with aiofiles.open(input_file, mode='r') as f:
        async for line in f:
            split_line = re.split(r'(\d+:\d+:\d+\.\d+): ', line)
            if len(split_line) < 3:
                if current_message is not None:
                    current_message["message"] += "\n" + line.strip()
                else:
                    print(f"Skipping line: {line}")
                continue
            source, timestamp, message = split_line[0], split_line[1], split_line[2]
            current_message = {"source": source, "timestamp": timestamp, "message": message}
            json_list.append(current_message)

    async with aiofiles.open(output_file, mode='w') as f:
        await f.write(json.dumps(json_list, indent=4))


# Start the event loop
loop = asyncio.get_event_loop()

# Run the function until completion
loop.run_until_complete(log_to_json(input, input + '.json'))

# vim: ft=python3
